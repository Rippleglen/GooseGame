import*as THREE from"https://cdn.jsdelivr.net/npm/three@0.169.0/build/three.module.min.js";import{DRACOLoader}from"https://cdn.jsdelivr.net/npm/three@0.169.0/examples/jsm/loaders/DRACOLoader.js";import{GLTFLoader}from"https://cdn.jsdelivr.net/npm/three@0.169.0/examples/jsm/loaders/GLTFLoader.js";import*as CANNON from"https://cdn.jsdelivr.net/npm/cannon-es@0.20.0/+esm";const scene=new THREE.Scene,world=new CANNON.World;world.gravity.set(0,0,0);const camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3);camera.position.z=60;const renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0});renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(window.devicePixelRatio),document.body.appendChild(renderer.domElement);const aspect=window.innerWidth/window.innerHeight,fov=camera.fov,frustumHeight=2*Math.tan(fov*Math.PI/180/2)*camera.position.z,frustumWidth=frustumHeight*aspect,wallThickness=1,leftWall=new CANNON.Body({mass:0,shape:new CANNON.Box(new CANNON.Vec3(1,frustumHeight/2,100))});leftWall.position.set(-frustumWidth/2-1,0,0),world.addBody(leftWall);const rightWall=new CANNON.Body({mass:0,shape:new CANNON.Box(new CANNON.Vec3(1,frustumHeight/2,100))});rightWall.position.set(frustumWidth/2+1,0,0),world.addBody(rightWall);const topWall=new CANNON.Body({mass:0,shape:new CANNON.Box(new CANNON.Vec3(frustumWidth/2,1,100))});topWall.position.set(0,frustumHeight/2+1,0),world.addBody(topWall);const bottomWall=new CANNON.Body({mass:0,shape:new CANNON.Box(new CANNON.Vec3(frustumWidth/2,1,100))});bottomWall.position.set(0,-frustumHeight/2-1,0),world.addBody(bottomWall);const frontWall=new CANNON.Body({mass:0,shape:new CANNON.Box(new CANNON.Vec3(frustumWidth/2,frustumHeight/2,1))});frontWall.position.set(0,0,3.8),world.addBody(frontWall);const backWall=new CANNON.Body({mass:0,shape:new CANNON.Box(new CANNON.Vec3(frustumWidth/2,frustumHeight/2,1))});function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}backWall.position.set(0,0,-3.8),world.addBody(backWall),window.addEventListener("resize",(()=>{const e=window.innerWidth/window.innerHeight,o=2*Math.tan(fov*Math.PI/180/2)*camera.position.z,t=o*e;leftWall.position.set(-t/2-1,0,0),rightWall.position.set(t/2+1,0,0),topWall.position.set(0,o/2+1,0),bottomWall.position.set(0,-o/2-1,0),frontWall.position.set(0,0,5),backWall.position.set(0,0,-4.3),renderer.setSize(window.innerWidth,window.innerHeight),camera.aspect=e,camera.updateProjectionMatrix(),onWindowResize()}));const ambientLight=new THREE.AmbientLight(16777215,4);scene.add(ambientLight);const raycaster=new THREE.Raycaster;raycaster.params.Points.threshold=.1;const mouse=new THREE.Vector2,modelFilenames=["public/conecprsd.glb","public/gameboycprsd.glb","public/glassescprsd.glb","public/hatcprsd.glb","public/maccprsd.glb","public/malletcprsd.glb","public/paintbrushcprsd.glb","public/pipecprsd.glb","public/potcprsd.glb","public/vasecprsd.glb","public/vhscprsd.glb"],models=[];let savedModelPositions={};const loader=new GLTFLoader,dracoLoader=new DRACOLoader;dracoLoader.setDecoderPath("https://www.gstatic.com/draco/versioned/decoders/1.4.1/"),loader.setDRACOLoader(dracoLoader),fetch("javascript/modelPositions.json").then((e=>{if(e.ok)return e.json();throw new Error("Failed to load model positions.")})).then((e=>{savedModelPositions=e,modelFilenames.forEach(((e,o)=>{loader.load(e,(function(o){const t=o.scene;scene.add(t),models.push(t);const n=(new THREE.Box3).setFromObject(t),i=new THREE.Vector3;n.getSize(i);const r=new CANNON.Box(new CANNON.Vec3(i.x/2,i.y/2,i.z/2)),s=new CANNON.Body({mass:1,linearDamping:.99,angularDamping:.99,position:new CANNON.Vec3(t.position.x,t.position.y,t.position.z),shape:r});if(world.addBody(s),t.body=s,savedModelPositions[e]){const o=savedModelPositions[e].position;t.position.set(o.x,o.y,o.z),t.body.position.set(o.x,o.y,o.z)}else t.position.set(8*Math.random()-5,4*Math.random(),0),t.body.position.set(t.position.x,t.position.y,0);const d=Math.random()*Math.PI*2,a=Math.random()*Math.PI*2,l=Math.random()*Math.PI*2;t.rotation.set(d,a,l),t.body.quaternion.setFromEuler(d,a,l)}),void 0,(function(o){console.error(`An error occurred while loading ${e}:`,o)}))}))})).catch((e=>{console.error("Error loading saved model positions:",e),modelFilenames.forEach(((e,o)=>{loader.load(e,(function(e){const o=e.scene;scene.add(o),models.push(o);const t=(new THREE.Box3).setFromObject(o),n=new THREE.Vector3;t.getSize(n);const i=new CANNON.Box(new CANNON.Vec3(n.x/2,n.y/2,n.z/2)),r=new CANNON.Body({mass:1,linearDamping:.99,angularDamping:.99,position:new CANNON.Vec3(o.position.x,o.position.y,o.position.z),shape:i});world.addBody(r),o.body=r,o.position.set(8*Math.random()-5,4*Math.random(),0),o.body.position.set(o.position.x,o.position.y,0);const s=Math.random()*Math.PI*2,d=Math.random()*Math.PI*2,a=Math.random()*Math.PI*2;o.rotation.set(s,d,a),o.body.quaternion.setFromEuler(s,d,a)}),void 0,(function(o){console.error(`An error occurred while loading ${e}:`,o)}))}))}));let isDragging=!1,selectedModel=null,dragPlane=new THREE.Plane,intersection=new THREE.Vector3,localClickPoint=new THREE.Vector3,modelWorldPosition=new THREE.Vector3,modelWorldQuaternion=new THREE.Quaternion;function onMouseDown(e){if(0===e.button){mouse.x=e.clientX/renderer.domElement.clientWidth*2-1,mouse.y=-e.clientY/renderer.domElement.clientHeight*2+1,raycaster.setFromCamera(mouse,camera);const o=raycaster.intersectObjects(models,!0);if(o.length>0){for(isDragging=!0,intersection.copy(o[0].point),selectedModel=o[0].object;!models.includes(selectedModel);)selectedModel=selectedModel.parent;selectedModel.body.type=CANNON.Body.KINEMATIC,selectedModel.body.updateMassProperties(),selectedModel.worldToLocal(localClickPoint.copy(intersection)),camera.getWorldDirection(dragPlane.normal),dragPlane.normal.negate(),dragPlane.setFromNormalAndCoplanarPoint(dragPlane.normal,intersection),renderer.domElement.style.cursor="grabbing"}}}function onMouseUp(e){0===e.button&&selectedModel&&(isDragging=!1,selectedModel.body.type=CANNON.Body.DYNAMIC,selectedModel.body.updateMassProperties(),selectedModel=null,renderer.domElement.style.cursor="auto")}function onMouseMove(e){if(isDragging&&selectedModel&&(mouse.x=e.clientX/renderer.domElement.clientWidth*2-1,mouse.y=-e.clientY/renderer.domElement.clientHeight*2+1,raycaster.setFromCamera(mouse,camera),raycaster.ray.intersectPlane(dragPlane,intersection))){selectedModel.getWorldPosition(modelWorldPosition),selectedModel.getWorldQuaternion(modelWorldQuaternion);const e=localClickPoint.clone().applyMatrix4(selectedModel.matrixWorld).clone().sub(modelWorldPosition).normalize(),o=intersection.clone().sub(modelWorldPosition).normalize(),t=(new THREE.Quaternion).setFromUnitVectors(e,o);selectedModel.quaternion.premultiply(t),selectedModel.updateMatrixWorld(!0);const n=localClickPoint.clone().applyMatrix4(selectedModel.matrixWorld),i=intersection.clone().sub(n);selectedModel.position.add(i),selectedModel.updateMatrixWorld(!0)}}function saveModelPositions(){const e={};models.forEach(((o,t)=>{const n=modelFilenames[t];e[n]={position:{x:o.position.x,y:o.position.y,z:o.position.z},rotation:{_x:o.rotation._x,_y:o.rotation._y,_z:o.rotation._z,_order:o.rotation._order}}})),console.log("Model positions:",JSON.stringify(e,null,2)),fetch("https://backend.andreasrp.com/save-model-positions",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((e=>{if(!e.ok)throw new Error(`Server responded with status ${e.status}`);return e.text()})).then((e=>{console.log("Server response:",e)})).catch((e=>{console.error("Error sending model positions to the server:",e)}))}function animate(){requestAnimationFrame(animate),world.step(1/60),models.forEach((e=>{e.body&&(isDragging&&selectedModel===e?(e.body.position.copy(e.position),e.body.quaternion.copy(e.quaternion),e.body.velocity.set(0,0,0),e.body.angularVelocity.set(0,0,0)):(e.position.copy(e.body.position),e.quaternion.copy(e.body.quaternion)))})),renderer.render(scene,camera)}renderer.domElement.addEventListener("mousedown",onMouseDown,!1),renderer.domElement.addEventListener("mouseup",onMouseUp,!1),renderer.domElement.addEventListener("mousemove",onMouseMove,!1),window.saveModelPositions=saveModelPositions,animate();
//#sourceMappingURL=gooseobjects.min.js.map